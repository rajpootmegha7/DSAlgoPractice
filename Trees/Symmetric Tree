101 - Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).
Input: root = [1,2,2,3,4,4,3]
Output: true

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        return (helper(root.left, root.right));
    }
    public boolean helper(TreeNode p, TreeNode q){
        if(p == null && q == null) return true;
        if((p !=null && q==null)||(p ==null && q!=null)) return false;
        if(p.val != q.val) return false;
        
        return (helper(p.left, q.right) && helper(p.right, q.left));
    }
}
